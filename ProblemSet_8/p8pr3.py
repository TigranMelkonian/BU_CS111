#
# ps8pr3.py  (Problem Set 8, Problem 3)
#
# Markov text generation
#
import random


def create_dictionary(filename):
    """takes a string representing the name of a text file, and that returns a dictionary of key-value pairs in which:
        each key is a word encountered in the text file
        the corresponding value is a list of words that follow the key word in the text file.
    """
    file = open(filename, 'r')
    text = file.read()  # read it all in at once!
    file.close()

    words = text.split()

    dictionary = {'$': [words[0]]}

    for i in range(len(words) - 1):
        if words[i] not in dictionary and words[i][-1] not in '.!?':
            dictionary[words[i]] = [words[i + 1]]
        elif words[i][-1] in '.!?':
            dictionary['$'] += [words[i + 1]]
        else:
            dictionary[words[i]] += [words[i + 1]]

    return dictionary


def generate_text(word_dict, num_words):
    """takes as parameters a dictionary of word transitions (generated by the create_dictionary function)
        named word_dict and a positive integer named num_words. The function should use word_dict
        to generate and print a string of num_words words.
    """
    generated_string = ''
    for i in range(num_words):
        if i == 0:
            wordlist = word_dict['$']
            next_word = random.choice(wordlist)
            generated_string += next_word + ' '
        if i == 1:
            wordlist = word_dict[next_word]
            next_word = random.choice(wordlist)
            generated_string += next_word + ' '
        if next_word[-1] in '.!?' or next_word not in word_dict:
            wordlist = word_dict['$']
            next_word = random.choice(wordlist)
            generated_string += next_word + ' '
        elif next_word in word_dict:
            wordlist = word_dict[next_word]
            next_word = random.choice(wordlist)
            generated_string += next_word + ' '
        else:
            next_word = random.choice(wordlist)
    return generated_string



